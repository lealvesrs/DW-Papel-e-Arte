{% extends "templates/base.html" %}

{% block content %}
<div x-data="fornecedorForm()">
    <ol class="breadcrumb mb-2">
        <li class="breadcrumb-item active">{{ title }}</li>
    </ol>
    <div class="row justify-content-center">
        <div class="col-md-6">

            <div class="card-body">
                <form>

                <div class="row mt-3">

                    <div class="col-md-6">
                           <div class="form-group">
                                <label for="nome">Nome</label>
                                <input type="text" class="form-control" id="nome" required="required"
                                    x-model="form.nome" x-bind:disabled="disabled">
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="telefone">Telefone</label>
                                <input type="text" class="form-control" id="telefone"
                                    x-model="form.telefone" x-bind:disabled="disabled">
                            </div>
                        </div>

                         <div class="col-2">
                            <div class="form-group">
                                <label for="id">Código</label>
                                <input type="text" class="form-control" id="id" x-model="form.fornecedor_id" disabled>
                            </div>
                        </div>
                    </div>
                    <div class="row">

                        <div class="col-12">
                            
                            <div class="form-group">
                                <label for="endereco">Endereço</label>
                                <input type="text" class="form-control" id="endereco"
                                    x-model="form.endereco" x-bind:disabled="disabled">
                            </div>
                        </div>
                    </div>

                    <button type="button" @click="updateForm()" class="btn btn-brown mt-4">Salvar</button>
                    <button type="button" @click="deleteForm()" x-show="!disabled" class="btn btn-danger mt-4">Excluir</button>
                    <a href="/fornecedores/ManutFornecedores" class="btn btn-info mt-4 ml-2" role="button">Retornar</a>
                </form>

                <div class="mt-3">
                    <template x-if="message">
                        <div :class="messageClass" x-text="message"></div>
                    </template>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    window.onload = function () {
        windowOnLoad();
        const localErro = "{{ erro }}";
        if (localErro != "") {
            alert("[vwFRUDrFornecedores|onload] Servidor retornou o erro: " + localErro);
        }
        $("#nome").focus();
    };

    function fornecedorForm() {
        return {
            form: {
                fornecedor_id: "{{ data.id }}",
                nome: "{{ data.nome }}",
                telefone: "{{ data.telefone }}",
                endereco: "{{ data.endereco }}",
                removido: '{{ data.removido }}' == 'true'
            },
            message: '',
            messageClass: '',
            disabled: {{ disabled }},

            async updateForm() {
                try {
                    const response = await fetch('/fornecedores/UpdateFornecedores', {
                        method: 'POST',
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify(this.form)
                    });

                    const result = await response.json();
                    if (result.status === "ok") {
                        alert("Fornecedor atualizado com sucesso");
                    } else {
                        const errorData = result.status;
                        this.message = `Erro! Não foi possível atualizar os dados: ${errorData}`;
                        this.messageClass = 'alert alert-danger';
                    }
                } catch (error) {
                    this.message = `Erro de conexão: ${error.message}`;
                    this.messageClass = 'alert alert-danger';
                }
            },

            async deleteForm() {
                if (!confirm('Tem certeza que deseja excluir este fornecedor?')) {
                    return;
                }

                try {
                    const response = await fetch('/fornecedores/DeleteFornecedores', {
                        method: 'POST',
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({ fornecedor_id: this.form.fornecedor_id })
                    });

                    const result = await response.json();
                    if (result.status === "ok") {
                        alert("Fornecedor excluído com sucesso");
                        window.location.href = "/fornecedores/ManutFornecedores";
                    } else {
                        const errorData = result.status;
                        this.message = `Erro! Não foi possível excluir o fornecedor: ${errorData}`;
                        this.messageClass = 'alert alert-danger';
                    }
                } catch (error) {
                    this.message = `Erro de conexão: ${error.message}`;
                    this.messageClass = 'alert alert-danger';
                }
            },
        };
    }
</script>

{% endblock %}
